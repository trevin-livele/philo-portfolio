import React from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ExternalLink, Github, Brain, X, CheckCircle, Clock, Play } from "lucide-react";

const categoryColors = {
  "predictive-analytics": "bg-purple-100 text-purple-700 border-purple-200",
  "automated-reporting": "bg-blue-100 text-blue-700 border-blue-200",
  "data-quality": "bg-green-100 text-green-700 border-green-200",
  "impact-assessment": "bg-orange-100 text-orange-700 border-orange-200",
  "survey-analysis": "bg-pink-100 text-pink-700 border-pink-200"
};

const statusColors = {
  "completed": "bg-green-100 text-green-700 border-green-200",
  "in-progress": "bg-yellow-100 text-yellow-700 border-yellow-200",
  "prototype": "bg-blue-100 text-blue-700 border-blue-200"
};

const statusIcons = {
  "completed": CheckCircle,
  "in-progress": Clock,
  "prototype": Play
};

export default function ProjectModal({ project, onClose }) {
  if (!project) return null;

  const categoryColor = categoryColors[project.category] || "bg-slate-100 text-slate-700 border-slate-200";
  const statusColor = statusColors[project.status] || "bg-slate-100 text-slate-700 border-slate-200";
  const StatusIcon = statusIcons[project.status] || CheckCircle;

  return (
    <Dialog open={!!project} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center justify-between">
            <span className="text-2xl font-bold text-slate-900">{project.title}</span>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <X className="w-5 h-5" />
            </Button>
          </DialogTitle>
        </DialogHeader>
        
        <div className="space-y-6">
          {/* Project Image */}
          <div className="relative">
            <img 
              src={project.image_url || "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=400&fit=crop"} 
              alt={project.title}
              className="w-full h-64 object-cover rounded-lg"
            />
            <div className="absolute top-4 left-4 flex gap-2">
              <Badge className={`${categoryColor} border`}>
                <Brain className="w-3 h-3 mr-1" />
                {project.category?.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
              </Badge>
              <Badge className={`${statusColor} border`}>
                <StatusIcon className="w-3 h-3 mr-1" />
                {project.status?.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
              </Badge>
            </div>
          </div>
          
          {/* Description */}
          <div>
            <h3 className="text-lg font-semibold text-slate-900 mb-3">Project Overview</h3>
            <p className="text-slate-600 leading-relaxed">{project.description}</p>
          </div>
          
          {/* Problem Statement */}
          <div>
            <h3 className="text-lg font-semibold text-slate-900 mb-3">Problem Statement</h3>
            <p className="text-slate-600 leading-relaxed">{project.problem_statement}</p>
          </div>
          
          {/* Technical Approach */}
          <div>
            <h3 className="text-lg font-semibold text-slate-900 mb-3">Technical Approach</h3>
            <p className="text-slate-600 leading-relaxed">{project.approach}</p>
          </div>
          
          {/* Technologies */}
          {project.technologies && project.technologies.length > 0 && (
            <div>
              <h3 className="text-lg font-semibold text-slate-900 mb-3">Technologies Used</h3>
              <div className="flex flex-wrap gap-2">
                {project.technologies.map((tech, index) => (
                  <Badge 
                    key={index} 
                    variant="secondary"
                    className="bg-emerald-50 text-emerald-700 border-emerald-200 border"
                  >
                    {tech}
                  </Badge>
                ))}
              </div>
            </div>
          )}
          
          {/* Results */}
          <div>
            <h3 className="text-lg font-semibold text-slate-900 mb-3">Results & Impact</h3>
            <p className="text-slate-600 leading-relaxed">{project.results}</p>
          </div>
          
          {/* Actions */}
          <div className="flex gap-3 pt-4 border-t border-slate-200">
            {project.github_url && (
              <Button 
                onClick={() => window.open(project.github_url, '_blank')}
                className="bg-slate-900 hover:bg-slate-800 text-white"
              >
                <Github className="w-4 h-4 mr-2" />
                View Code
              </Button>
            )}
            {project.demo_url && (
              <Button 
                onClick={() => window.open(project.demo_url, '_blank')}
                variant="outline"
              >
                <ExternalLink className="w-4 h-4 mr-2" />
                Live Demo
              </Button>
            )}
            <Button variant="outline" onClick={onClose}>
              Close
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}