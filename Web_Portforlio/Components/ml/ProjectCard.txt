import React from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Brain, Github, ExternalLink, ArrowRight, CheckCircle, Clock, Play } from "lucide-react";

const categoryColors = {
  "predictive-analytics": "bg-purple-100 text-purple-700 border-purple-200",
  "automated-reporting": "bg-blue-100 text-blue-700 border-blue-200",
  "data-quality": "bg-green-100 text-green-700 border-green-200",
  "impact-assessment": "bg-orange-100 text-orange-700 border-orange-200",
  "survey-analysis": "bg-pink-100 text-pink-700 border-pink-200"
};

const statusColors = {
  "completed": "bg-green-100 text-green-700 border-green-200",
  "in-progress": "bg-yellow-100 text-yellow-700 border-yellow-200",
  "prototype": "bg-blue-100 text-blue-700 border-blue-200"
};

const statusIcons = {
  "completed": CheckCircle,
  "in-progress": Clock,
  "prototype": Play
};

export default function ProjectCard({ project, onSelect }) {
  const categoryColor = categoryColors[project.category] || "bg-slate-100 text-slate-700 border-slate-200";
  const statusColor = statusColors[project.status] || "bg-slate-100 text-slate-700 border-slate-200";
  const StatusIcon = statusIcons[project.status] || CheckCircle;

  return (
    <Card className="border-0 shadow-lg hover-lift overflow-hidden group">
      <div className="relative">
        <img 
          src={project.image_url || "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=400&h=300&fit=crop"} 
          alt={project.title}
          className="w-full h-48 object-cover group-hover:scale-105 smooth-transition"
        />
        <div className="absolute top-4 left-4 flex gap-2">
          <Badge className={`${categoryColor} border`}>
            <Brain className="w-3 h-3 mr-1" />
            {project.category?.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
          </Badge>
          <Badge className={`${statusColor} border`}>
            <StatusIcon className="w-3 h-3 mr-1" />
            {project.status?.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
          </Badge>
        </div>
      </div>
      
      <CardContent className="p-6">
        <h3 className="text-xl font-bold text-slate-900 mb-3 line-clamp-2">
          {project.title}
        </h3>
        
        <p className="text-slate-600 mb-4 line-clamp-3">
          {project.description}
        </p>
        
        {project.technologies && (
          <div className="flex flex-wrap gap-2 mb-4">
            {project.technologies.slice(0, 3).map((tech, index) => (
              <Badge 
                key={index} 
                variant="secondary"
                className="bg-emerald-50 text-emerald-700 border-emerald-200 border text-xs"
              >
                {tech}
              </Badge>
            ))}
            {project.technologies.length > 3 && (
              <Badge variant="secondary" className="bg-slate-100 text-slate-700 border-slate-200 border text-xs">
                +{project.technologies.length - 3} more
              </Badge>
            )}
          </div>
        )}
        
        <div className="flex items-center justify-between">
          <div className="flex gap-2">
            {project.github_url && (
              <Button 
                size="sm" 
                variant="outline"
                onClick={(e) => {
                  e.stopPropagation();
                  window.open(project.github_url, '_blank');
                }}
              >
                <Github className="w-4 h-4" />
              </Button>
            )}
            {project.demo_url && (
              <Button 
                size="sm" 
                variant="outline"
                onClick={(e) => {
                  e.stopPropagation();
                  window.open(project.demo_url, '_blank');
                }}
              >
                <ExternalLink className="w-4 h-4" />
              </Button>
            )}
          </div>
          <Button 
            size="sm" 
            onClick={() => onSelect(project)}
            className="bg-slate-900 hover:bg-slate-800 text-white"
          >
            View Details
            <ArrowRight className="w-4 h-4 ml-1" />
          </Button>
        </div>
      </CardContent>
    </Card>
  );
}